---
import type { Cabin } from "../../api/cabins/getCabin";
import Users from "../svgs/Users.astro";
import Shower from "../svgs/Shower.astro";
import DirectionSign from "../svgs/DirectionSign.astro";
import MountainIcon from "../svgs/MountainIcon.astro";
import ForkAndKnife from "../svgs/ForkAndKnife.astro";
import Wifi from "../svgs/Wifi.astro";
import Ski from "../svgs/Ski.astro";
import Fire from "../svgs/Fire.astro";
import Globe from "../svgs/Globe.astro";
import Tv from "../svgs/Tv.astro";

interface Props {
  cabin: Cabin;
}

const { cabin } = Astro.props;

const { highlight } = cabin["basic-info"];

function getIcon(icon: string) {
  switch (icon) {
    case "person-plus":
      return Users;
    case "direction-sign":
      return DirectionSign;
    case "shower-head-water":
      return Shower;
    case "fork-plate-knife":
      return ForkAndKnife;
    case "basic-rss":
      return Wifi;
    case "travelling-backpack":
      return MountainIcon;
    case "skis-and-poles":
      return Ski;
    case "heart":
      return Fire;
    case "globe":
      return Globe;
    case "camera":
      return Tv;
    default:
      return MountainIcon;
  }
}
---

<section class="benefits">
  <div class="wrapper">
    <h3>What this place offers</h3>
    <div class="list">
      {
        highlight.map((item) => {
          const Icon = getIcon(item.icon);
          return (
            <div class="item-list">
              <Icon />
              <p>{item.text}</p>
            </div>
          );
        })
      }
    </div>
  </div>
</section>

<style>
  .benefits {
    background-color: var(--tertiary-700);
  }

  .wrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    color: var(--light);
    padding-top: 2em;
    padding-bottom: 2em;
    gap: 4em;
  }

  .benefits h3 {
    color: var(--light);
    text-align: left;
    font-size: 2em;
  }

  .list {
    display: grid;
    grid-template-columns: repeat(2, auto);
    gap: 1.5rem;
    column-gap: 2.5em;
  }

  .item-list {
    display: flex;
    align-items: center;
    gap: 1em;
  }

  .list :global(svg) {
    width: 2em;
    height: 2em;
    fill: var(--light);
  }

  @media only screen and (max-width: 768px) {
    .wrapper {
      flex-direction: column;
      gap: 3em;
    }
  }

  @media only screen and (max-width: 425px) {
    .list {
      grid-template-columns: 1fr;
    }
  }
</style>
