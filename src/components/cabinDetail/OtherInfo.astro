---
import type { Cabin, Icons } from "../../types/cabin";
import Users from "../svgs/Users.astro";
import Shower from "../svgs/Shower.astro";
import DirectionSign from "../svgs/DirectionSign.astro";
import MountainIcon from "../svgs/MountainIcon.astro";
import ForkAndKnife from "../svgs/ForkAndKnife.astro";
import Wifi from "../svgs/Wifi.astro";
import Ski from "../svgs/Ski.astro";
import Fire from "../svgs/Fire.astro";
import Globe from "../svgs/Globe.astro";
import Tv from "../svgs/Tv.astro";

interface Props {
  cabin: Cabin;
}

const { cabin } = Astro.props;

const highlight = cabin["footer info"];

function getIcon(icon: Icons) {
  switch (icon) {
    case "person-plus":
      return Users;
    case "direction-sign":
      return DirectionSign;
    case "shower-head-water":
      return Shower;
    case "fork-plate-knife":
      return ForkAndKnife;
    case "wifi":
      return Wifi;
    case "mountain":
      return MountainIcon;
    case "skis-and-poles":
      return Ski;
    case "fire":
      return Fire;
    case "globe":
      return Globe;
    case "tv":
      return Tv;
    default:
      return MountainIcon;
  }
}
---

{
  highlight && highlight.length > 0 && (
    <section class="benefits">
      <div class="wrapper">
        <h3>What this place offers</h3>
        <div class="list">
          {highlight.map((item) => {
            const Icon = getIcon(item.icon);
            return (
              <div class="item-list">
                <Icon />
                <p>{item.text}</p>
              </div>
            );
          })}
        </div>
      </div>
    </section>
  )
}

<style>
  .benefits {
    background-color: var(--tertiary-700);
  }

  .benefits .wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    color: var(--light);
    padding-top: 2.5em;
    padding-bottom: 2.5em;
    gap: 3em;
  }

  .benefits h3 {
    color: var(--light);
    text-align: left;
    font-size: 2.5em;
  }

  .list {
    display: grid;
    grid-template-columns: repeat(3, auto);
    gap: 1.5rem;
    column-gap: 2.5em;
    width: 100%;
  }

  .item-list {
    display: flex;
    align-items: center;
    gap: 1em;
  }

  .list :global(svg) {
    width: 2em;
    height: 2em;
    fill: var(--light);
  }

  @media only screen and (max-width: 768px) {
    .list {
      grid-template-columns: repeat(2, auto);
      justify-content: space-around;
    }

    .benefits h3 {
      text-align: center;
      font-size: 2em;
    }
  }

  @media only screen and (max-width: 425px) {
    .list {
      grid-template-columns: auto;
    }
  }
</style>
